bl_info = {
    "name": "Precision",
    "author": "rlneumiler@gmail.com",
    "version": (1, 0),
    "blender": (3, 0, 0),
    "location": "View3D > UI > Tools",
    "description": "Configure precision modeling settings",
    "warning": "",
    "doc_url": "",
    "category": "3D View",
}

import os
import bpy
    
class PRECISION_OT_Func(bpy.types.Operator):
    bl_idname = "precision.func"
    bl_label = "Set mm precision"

    def execute(self, context):
        bpy.context.scene.unit_settings.scale_length = 0.001
        bpy.context.scene.unit_settings.length_unit = 'MILLIMETERS'
        bpy.context.scene.unit_settings.mass_unit = 'GRAMS'
     
        space = bpy.context.space_data
        space.overlay.show_stats=True
        space.clip_end = 10000
        space.clip_start = 0.01   
        
        gridscale_to_mm()
        return {'FINISHED'}
    
class VIEW3D_PT_PrecisionPanel(bpy.types.Panel):
    bl_label = "Configure Precision"
    bl_idname = "VIEW3D_PT_PrecisionPanel"
    bl_space_type = 'VIEW_3D'
    bl_region_type = "UI"
    bl_category = "Precision"

    def draw(self, context):
        layout = self.layout
        layout.operator(PRECISION_OT_Func.bl_idname)

##################################################################################
class PrecisionPreferences(bpy.types.AddonPreferences):
    bl_idname = __name__
    print(__name__)

    debug: bpy.props.BoolProperty(
        name = "Enable console debug output from PDT scripts",
        default = False,
        description = "NOTE: Does not enable debugging globally in Blender (only in PDT scripts)",
    )

    def draw(self, context):
        layout = self.layout

        box = layout.box()
        row1 = box.row()
        row2 = box.row()
        row1.prop(self, "debug")

##################################################################################
            
def gridscale_to_mm():
    """Set grid scale to mm in 3D view areas."""
    for window in bpy.data.window_managers[0].windows:
        for area in window.screen.areas:
            if area.type != 'VIEW_3D':
                continue

            for space in area.spaces:
                if space.type == 'VIEW_3D':
                    space.overlay.grid_scale = 0.001
                    break

def in_text_editor():
    """Check if we are executing from within the script editor."""
    return bpy.context.area.type == 'TEXT_EDITOR'



def register():
    """Required by blender addon's."""
    classes = (PRECISION_OT_Func, VIEW3D_PT_PrecisionPanel)
    for cls in classes:
        bpy.utils.register_class(cls)

def unregister():
    """Required by blender addon's."""
    classes = (PRECISION_OT_Func, VIEW3D_PT_PrecisionPanel)
    for cls in classes:
        bpy.utils.unregister_class(cls)

if in_text_editor():
    os.system('cls' if os.name == 'nt' else 'clear')
    print("Precision addon cleared the console for debugging")
    register()
